---
title: "EV Power - Lab 4 Project Report"
format: typst
---

# Example Solution 1

## **Part 0: libraries**

```{r}
library(tidyr)
library(tidyverse)
library(readr)
library(ggplot2)
library(dplyr)
library(stringr)
install.packages("maps")
library(maps)
```

## **Part 1:** **Defining Research Question**

Chosen Question: Which states increased their renewable share the most from 2021 to 2023?

## **Part 2: Data Preparation and Cleaning**

```{r}
renew2021 <- read_csv("data/renew-use-2021.csv")
renew2022 <- read_csv("data/renew-use-2022.csv")
renew2023 <- read_csv("data/renew-use-2023.csv")

total2021 <- read_csv("data/total-use-2021.csv")
total2022 <- read_csv("data/total-use-2022.csv")
total2023 <- read_csv("data/total-use-2023.csv")

total2021 <- total2021 |>
  rename(energy_source = Energy_Source) |>
  mutate(across(where(is.character), ~ str_replace_all(.x, "[^0-9A-Za-z ]", "")))

total2022 <- total2022 |>
  rename(energy_source = Energy_Source) |>
  mutate(across(where(is.character), ~ str_replace_all(.x, "[^0-9A-Za-z ]", "")))

total2023 <- total2023 |>
  rename(energy_source = Energy_Source) |>
  mutate(across(where(is.character), ~ str_replace_all(.x, "[^0-9A-Za-z ]", "")))


price_21_23 <- read_csv("data/av-energy-price-2021-2023.csv")
ev_2023     <- read_csv("data/ev-registrations-by-state-2023.csv")

renew2021 <- renew2021 |>
  rename(state = State, energy_source = Energy_Source, renewable_use_2021 = Renewable_Use_2021) |>
  mutate(state = str_to_lower(str_trim(state)))

renew2022 <- renew2022 |>
  rename(state = State, energy_source = Energy_Source, renewable_use_2022 = Renewable_Use_2022) |>
  mutate(state = str_to_lower(str_trim(state)))

renew2023 <- renew2023 |>
  rename(state = State, energy_source = Energy_Source, renewable_use_2023 = Renewable_Use_2023) |>
  mutate(state = str_to_lower(str_trim(state)))




price_21_23 <- price_21_23 |>
  mutate(across(where(is.character), str_trim))

colnames(ev_2023) <- c("state", "ev_count")

ev_2023 <- ev_2023 |>
  filter(!is.na(state) & state != "STATE") |>
  mutate(
    state    = str_to_lower(str_trim(state)),
    ev_count = str_replace_all(ev_count, "[^0-9]", ""),
    ev_count = as.numeric(ev_count)
  )
```

## **Part 3: Joining / Pivoting Datasets for Analysis**

```{r}
renew2021_tidy <- renew2021 |>
    mutate(renewable_use = parse_number(as.character(renewable_use_2021))) |>
    mutate(year = 2021) |> select(state, energy_source, year, renewable_use)


renew2022_tidy <- renew2022 |>
    mutate(renewable_use = parse_number(as.character(renewable_use_2022))) |>
    mutate(year = 2022) |> select(state, energy_source, year, renewable_use)


renew2023_tidy <- renew2023 |>
    mutate(renewable_use = parse_number(as.character(renewable_use_2023))) |>
    mutate(year = 2023) |> select(state, energy_source, year, renewable_use)

renew_all_tidy <- bind_rows(renew2021_tidy, renew2022_tidy, renew2023_tidy)

renew_by_state_year <- renew_all_tidy |>
  group_by(state, year) |>
  summarize(renewable_total = sum(renewable_use, na.rm = TRUE), .groups = "drop")

pivot_total <- function(df, yr) {
  df |>
    mutate(tag = dplyr::case_when(
      str_detect(energy_source, regex("^total\\b", ignore_case = TRUE)) ~ 3,
      str_detect(energy_source, regex("all\\s*sources", ignore_case = TRUE)) ~ 2,
      TRUE ~ 0
    )) |>
    dplyr::slice_max(tag, n = 1, with_ties = FALSE) |>
    tidyr::pivot_longer(
      cols = -energy_source,
      names_to = "abbr",
      values_to = "total_energy"
    ) |>
    mutate(year = yr) |>
    select(abbr, year, total_energy) |>
    left_join(state_map, by = "abbr") |>
    mutate(
      state = tolower(state),
      total_energy = as.numeric(total_energy)
    ) |>
    select(state, year, total_energy)
}


state_map <- tibble(
  abbr = c(state.abb, "DC"),
  state = tolower(c(state.name, "District of Columbia"))
)


total2021_long <- pivot_total(total2021, 2021)
total2022_long <- pivot_total(total2022, 2022)
total2023_long <- pivot_total(total2023, 2023)

total_by_state_year <- bind_rows(total2021_long, total2022_long, total2023_long) |>
  mutate(state = str_to_lower(state))

energy_shares <- renew_by_state_year |>
  left_join(total_by_state_year, by = c("state", "year")) |>
  mutate(
    renewable_share = ifelse(total_energy > 0, renewable_total / total_energy, NA_real_)
  )

shares_2023 <- energy_shares |>
  filter(year == 2023)

merged_2023 <- shares_2023 |>
  left_join(ev_2023, by = "state") |>
  mutate(
    ev_per_energy = ifelse(total_energy > 0, ev_count / total_energy, NA_real_)
  )
```

## **Part 4: Mapping Visualization**

```{r}
## Part 4: Mapping Visualization

delta_share <- energy_shares |>
	filter(year %in% c(2021, 2023)) |>
	select(state, year, renewable_share) |>
	pivot_wider(names_from = year, values_from = renewable_share, names_prefix = "y") |>
	mutate(delta_share = y2023 - y2021)

us_states <- as_tibble(map_data("state"))

map_df <- us_states |>
  left_join(delta_share, by = c("region" = "state"))

ggplot(map_df, aes(long, lat, group = group, fill = delta_share)) +
  geom_polygon(color = "white", linewidth = 0.2) +
  coord_fixed(1.3) +
  scale_fill_gradient2(low = "#d73027", mid = "#ffffbf", high = "#1a9850",
                       midpoint = 0, na.value = "grey90",
                       name = "Δ renewable share\n(2021 → 2023)") +
  labs(
    title = "Change in Renewable Share by State (2021 → 2023)",
    subtitle = "Increase in the fraction of total energy from renewables",
    caption = "STAT 133 • Data: course CSVs"
  ) +
  theme_minimal() +
  theme(
    axis.text = element_blank(),
    axis.title = element_blank(),
    panel.grid = element_blank(),
    legend.position = "bottom"
  )

```